name: Release Binaries

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-and-upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        app:
          - name: "jd-client"
            manifest: "miner-apps/jd-client/Cargo.toml"
            bin: "jd_client"
            paths:
              x86_64_linux: "miner-apps/target/release/jd_client"
              aarch64_linux: "miner-apps/target/aarch64-unknown-linux-gnu/release/jd_client"
              x86_64_macos: "miner-apps/target/release/jd_client"
              aarch64_macos: "miner-apps/target/aarch64-apple-darwin/release/jd_client"

          - name: "jd-server"
            manifest: "pool-apps/jd-server/Cargo.toml"
            bin: "jd_server"
            paths:
              x86_64_linux: "pool-apps/target/release/jd_server"
              aarch64_linux: "pool-apps/target/aarch64-unknown-linux-gnu/release/jd_server"
              x86_64_macos: "pool-apps/target/release/jd_server"
              aarch64_macos: "pool-apps/target/aarch64-apple-darwin/release/jd_server"

          - name: "pool"
            manifest: "pool-apps/pool/Cargo.toml"
            bin: "pool_sv2"
            paths:
              x86_64_linux: "pool-apps/target/release/pool_sv2"
              aarch64_linux: "pool-apps/target/aarch64-unknown-linux-gnu/release/pool_sv2"
              x86_64_macos: "pool-apps/target/release/pool_sv2"
              aarch64_macos: "pool-apps/target/aarch64-apple-darwin/release/pool_sv2"

          - name: "translator"
            manifest: "miner-apps/translator/Cargo.toml"
            bin: "translator_sv2"
            paths:
              x86_64_linux: "miner-apps/target/release/translator_sv2"
              aarch64_linux: "miner-apps/target/aarch64-unknown-linux-gnu/release/translator_sv2"
              x86_64_macos: "miner-apps/target/release/translator_sv2"
              aarch64_macos: "miner-apps/target/aarch64-apple-darwin/release/translator_sv2"

    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Cache Cargo
      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Build native
      - name: Build native
        run: cargo build --release --locked --manifest-path=${{ matrix.app.manifest }}

      # Install cross for Linux ARM builds
      - name: Install cross
        if: matrix.os == 'ubuntu-latest'
        run: cargo install cross

      # Build Linux ARM64
      - name: Build Linux ARM64
        if: matrix.os == 'ubuntu-latest'
        run: cross build --release --locked --manifest-path=${{ matrix.app.manifest }} --target aarch64-unknown-linux-gnu

      # Install macOS ARM64 target
      - name: Install MacOS ARM64 target
        if: matrix.os == 'macos-latest'
        run: rustup target add aarch64-apple-darwin

      # Build MacOS ARM64
      - name: Build MacOS ARM64
        if: matrix.os == 'macos-latest'
        run: cargo build --release --locked --manifest-path=${{ matrix.app.manifest }} --target aarch64-apple-darwin

      # Upload binaries
      - name: Upload Linux x86-64
        if: matrix.os == 'ubuntu-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.app.paths.x86_64_linux }}
          asset_name: ${{ matrix.app.bin }}-x86_64-linux-gnu
          tag: ${{ github.ref }}

      - name: Upload Linux ARM64
        if: matrix.os == 'ubuntu-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.app.paths.aarch64_linux }}
          asset_name: ${{ matrix.app.bin }}-aarch64-linux-gnu
          tag: ${{ github.ref }}

      - name: Upload MacOS x86-64
        if: matrix.os == 'macos-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.app.paths.x86_64_macos }}
          asset_name: ${{ matrix.app.bin }}-x86_64-apple-darwin
          tag: ${{ github.ref }}

      - name: Upload MacOS ARM64
        if: matrix.os == 'macos-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.app.paths.aarch64_macos }}
          asset_name: ${{ matrix.app.bin }}-aarch64-apple-darwin
          tag: ${{ github.ref }}

  build-and-upload-docker:
    needs: build-and-upload
    strategy:
      matrix:
        app: [jd_client, jd_server, pool_sv2, translator_sv2]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          file: docker/Dockerfile.base
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            luskabalieiro/${{ matrix.app }}:${{ github.ref_name }}
            luskabalieiro/${{ matrix.app }}:latest
          build-args: |
            SV2_APP=${{ matrix.app }}
            GITHUB_REPO=${{ github.repository }}
            VERSION=${{ github.ref_name }}

